Set Interface:     -- No Duplicates allowed.
===============
- Extends the Collection Interface.
- The Set interface provides the features of the mathematical set in Java.
- Unlike the List interface, sets collection cannot contain duplicate elements.
- Set is an interface, so we cannot create objects from it. In order to use set functionalities,
  we use classes that implement set interface:

    Class that Implement Set Interface:
    ===================================
    - HashSet   <backed by HashMap>
    - LinkedHashSet
    - EnumSet
    - TreeSet   <backed by TreeMap>

- Set Interface has subinterfaces that Extends it namely:
    - SortedSet
    - NavigableSet

- To use Set interface, import java.util.Set package
        // Set implementation using HashSet
        Set<String> animals = new HashSet<>();
- When accessing elements using the iterator method, the order isn't guaranteed for HashSet class, but order is guaranteed for the TreeSet class.

    Methods of Set
    ===============
    The Set interface includes all the methods of the Collection interface. It's because Collection is a super interface of Set.
    - set.add(item) - adds the specified element to the set.
    - set1.addAll(set2) - adds all the elements of the specified collection to the set.
    - set.iterator() - returns an iterator that can be used to access elements of set sequentially.
    - set.remove(item) - removes the specified element from the set.
    - removeAll() - removes all the elements from the set that is present in another specified set
    - retainAll() - retains all elements in the set that are also present in another specified set
    - set.clear() - removes all the elements from the set
    - set.size() - returns the length (number of elements) of the set
    - set.toArray() - returns an array containing all the elements of the set
    - set.contains(item) - returns true if the set contains the specified element
    - set.containsAll(set) - returns true if set contains all elements of the specified collection
    - set.hashCode() - returns a hash code value (address of the element in the set)

 Set Operations
 ===============
 The Java Set interface allows us to perform basic mathematical set operations like union, intersection, and subset.
 - Union - to get the union of two sets x and y, we can use x.addAll(y)
 - Intersection - to get the intersection of two sets x and y, we can use x.retainAll(y)
 - Subset - to check if x is a subset of y, we can use y.containsAll(x)
