Java Encapsulation:
====================
- Encapsulation is one of the key features of Object-Oriented Programming.
- It refers to the bundling of fields and methods in a single class.
- It prevents outer classes from accessing and changing the fields and methods of a class.
- This also helps to achieve <Data Hiding>, but must use private access modifier.
- Encapsulation is just keeping similar codes together
    <Note>: Encapsulation isn's entirely data hiding.
            It  refers to bundling of related fields and methods together. This can be used to achieve data hiding. Encapsulation in itself isn't data hiding.

Why Encapsulation?
==================
1. Help us to keep related fields and methods together, which makes our code cleaner and easy 
   to read.
2. It helps to control the values of our data fields. e.g making sure data being set meets 
   certain rules
3. The getter and setter methods provide read-only and write-only access to our class fields
4. It helps decouple components of a system, and these bundles can be developed, tested and debugged independently and concurrently & any changes in a particular component do not have 
    any effect to other components
5. We can achieve data hiding using private access modifier on variables to restrict access.
   private fields are hept hidden from outer classes.

Data Hiding
============
- It's a way of restricting the access of our data members by hiding the implementation details.
- Encapsulation also provides a way for data hiding.
- We can use access modifiers to achieve data hiding.
 i.e making class variables private then using setters & getters to modify and access these fields.

